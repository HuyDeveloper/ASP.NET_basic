// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication2;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240201135350_InitWebDB_V3")]
    partial class InitWebDB_V3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Model.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("cart");

                    b.HasData(
                        new
                        {
                            id = 1
                        },
                        new
                        {
                            id = 2
                        });
                });

            modelBuilder.Entity("WebApplication2.Model.Shoe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.HasIndex("CartId");

                    b.ToTable("shoe");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CartId = 1,
                            brand = "Nike",
                            description = "Nike Air Force 1",
                            name = "Nike Air Force 1",
                            price = 100m
                        },
                        new
                        {
                            id = 2,
                            CartId = 1,
                            brand = "Nike",
                            description = "Nike Air Force 2",
                            name = "Nike Air Force 2",
                            price = 200m
                        },
                        new
                        {
                            id = 3,
                            CartId = 2,
                            brand = "Nike",
                            description = "Nike Air Force 3",
                            name = "Nike Air Force 3",
                            price = 300m
                        },
                        new
                        {
                            id = 4,
                            CartId = 2,
                            brand = "Nike",
                            description = "Nike Air Force 4",
                            name = "Nike Air Force 4",
                            price = 400m
                        });
                });

            modelBuilder.Entity("WebApplication2.Model.Shoe", b =>
                {
                    b.HasOne("WebApplication2.Model.Cart", "Cart")
                        .WithMany("Shoes")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("WebApplication2.Model.Cart", b =>
                {
                    b.Navigation("Shoes");
                });
#pragma warning restore 612, 618
        }
    }
}
